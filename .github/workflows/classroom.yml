name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare Library For Tests
        run: cd library && npm ci

      - name: Run Cars Unit Tests 
        run: cd services/cars && npm ci && npm run test
      
      - name: Run Payment Unit Tests 
        run: cd services/payment && npm ci && npm run test
      
      - name: Run Rental Unit Tests 
        run: cd services/rental && npm ci && npm run test

      - name: Run Gateway Unit Tests 
        run: cd services/gateway && npm ci && npm run test

      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push images to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: ${{ vars.YC_CR_REGISTRY }}
          CR_REPOSITORY: ${{ vars.YC_CR_REPOSITORY }}
          IMAGE_TAG: v.${{ github.sha }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          docker compose build && docker compose push 
          test "$REF_NAME" = "master" && (IMAGE_TAG=stable docker compose build && IMAGE_TAG=stable docker compose push) || true

    # - name: Run containers
    #   timeout-minutes: 5
    #   run: |
    #     docker compose up -d
    #     ./scripts/wait-script.sh
    #   env:
    #     CARS_POSTGRES_USER: ${{secrets.CARS_POSTGRES_USER}}
    #     CARS_POSTGRES_PASSWORD: ${{secrets.CARS_POSTGRES_PASSWORD}}
    #     CARS_POSTGRES_DB: ${{secrets.CARS_POSTGRES_DB}}
    #     CARS_STORAGE_CONN_STRING: ${{secrets.CARS_STORAGE_CONN_STRING}}
    #     PAYMENT_POSTGRES_USER: ${{secrets.PAYMENT_POSTGRES_USER}}
    #     PAYMENT_POSTGRES_PASSWORD: ${{secrets.PAYMENT_POSTGRES_PASSWORD}}
    #     PAYMENT_POSTGRES_DB: ${{secrets.PAYMENT_POSTGRES_DB}}
    #     PAYMENT_STORAGE_CONN_STRING: ${{secrets.PAYMENT_STORAGE_CONN_STRING}}
    #     RENTAL_POSTGRES_USER: ${{secrets.RENTAL_POSTGRES_USER}}
    #     RENTAL_POSTGRES_PASSWORD: ${{secrets.RENTAL_POSTGRES_PASSWORD}}
    #     RENTAL_POSTGRES_DB: ${{secrets.RENTAL_POSTGRES_DB}}
    #     RENTAL_STORAGE_CONN_STRING: ${{secrets.RENTAL_STORAGE_CONN_STRING}}
    #     GATEWAY_REDIS_CONN_STRING: ${{secrets.GATEWAY_REDIS_CONN_STRING}}
    #     WAIT_PORTS: 8080,8070,8060,8050

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v3/postman/collection.json
          environment: v3/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true
